version: "3.9"

x-common-environment: &common-environment
  DATABASE_URL: postgresql+asyncpg://postgres:postgres@database:5432/arad

services:
  front-end:
    build: front-end
    volumes:
      - './front-end:/app'
    depends_on:
      - node-api
    ports:
      - "3000:3000" # for websockets
      - "80:3000"

  node-api:
    build: node-api
    depends_on:
      - node-identity
      - node-reader
      - node-reviewer
      - node-administrator
    ports:
      - "81:80" # this is how the front end talks to the api. port 80 is taken atm.

  node-identity:
    build: node-identity
    environment: *common-environment
    volumes:
      - './node-identity:/app'
    depends_on:
      database:
        condition: service_healthy

  node-reader:
    build: node-reader
    environment: *common-environment
    volumes:
      - './node-reader:/app'
    depends_on:
      database:
        condition: service_healthy

  node-reviewer:
    build: node-reviewer
    environment: *common-environment
    volumes:
      - './node-reviewer:/app'
    depends_on:
      database:
        condition: service_healthy

  node-administrator:
    build: node-administrator
    environment: *common-environment
    volumes:
      - './node-administrator:/app'
    depends_on:
      database:
        condition: service_healthy

  database:
    image: "postgres:bullseye"
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - 'database:/var/lib/postgresql/data'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  database:
